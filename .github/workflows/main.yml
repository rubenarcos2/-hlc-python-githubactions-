name: CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 
      - uses: actions/checkout@v2

      # Vamos a establecer un environment de python 3.6
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: "3.6"
        
                
      # Instalamos la dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Corremos nuestros tests
      - name: Run unit tests
        run: |
          pytest

      # Esto es una prueba para utilizar una action enfocada en el scp. Para la conexión, utilizamos las secrets de Github.
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: "vps-7cf384a8.vps.ovh.net"
          username: ${{ secrets.HOSTNAME }}
          password: ${{ secrets.HOSTPASS }}
          port: 22
          source: "."
          target: "./app"
      
      #En este paso, vamos a loguearnos a DockerHub utilizando las credenciales que tenemos en las variables secretas.
      #Obtenemos la última versión de la imagen subida al repositorio de Dockerhub.
      #Construimos la imagen y le asignamos el tag de que es la última versión.
      #Hacemos push para subir la imagen al repositorio Dockerhub.
      - name: Docker Compose Actions Workflow       
        uses: actions/checkout@v2
            
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
      - name: Build the latest Docker image
        run: docker build . --file Dockerfile --tag dafecueto/rockpaperscissors:latest
      - name: Push the latest Docker image
        run: docker push dafecueto/rockpaperscissors

        #En este paso, vamos a acceder mediante ssh al servidor en el que queremos desplegar nuestra aplicación, y le vamos a decir:
          # Hacer un pull de la imagen que acabamos de subir a Dockerhub.
          # Como ya se estará desplegando, paramos el contenedor que ya se encuentra en funcionamiento, y lo eliminamos.
          # Arrancamos un nuevo contenedor con la última versión de la imagen de nuestra aplicación.
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: "vps-7cf384a8.vps.ovh.net"
          username: ${{ secrets.HOSTNAME }}
          password: ${{ secrets.HOSTPASS }}
          port: 22
          script: |
            sudo su
            docker pull dafecueto/rockpaperscissors
            docker container stop miapp
            docker container rm miapp
            docker run -d -p 5000:5000 --name miapp dafecueto/rockpaperscissors:latest
